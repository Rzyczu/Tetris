/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/components/CreateTable.ts":
/*!***************************************!*\
  !*** ./src/components/CreateTable.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Game */ \"./src/components/Game.ts\");\n\r\nvar config = __webpack_require__(/*! ./config.json */ \"./src/components/config.json\");\r\nvar CreateTable = /** @class */ (function () {\r\n    function CreateTable(level) {\r\n        this.array = [];\r\n        this.gameLevel = level;\r\n        this.x = config.table.rows;\r\n        this.y = config.table.columns;\r\n        this.boardImg();\r\n        this.createArray();\r\n        this.createGameBoard();\r\n    }\r\n    CreateTable.prototype.boardImg = function () {\r\n        var img = document.createElement(\"img\");\r\n        img.id = \"boardImg\";\r\n        img.style.width = \"90%\";\r\n        img.style.height = \"auto\";\r\n        img.style.display = \"block\";\r\n        img.style.marginLeft = \"auto\";\r\n        img.style.marginRight = \"auto\";\r\n        img.src = config.assets.board.src;\r\n        document.getElementById(\"gameBoard\").appendChild(img);\r\n    };\r\n    CreateTable.prototype.createArray = function () {\r\n        var style = 'font-weight: bold; font-size: 30px;color: red; text-shadow: 3px 3px 0 rgb(0,0,38)';\r\n        // console.log('%c[y, x]', style)\r\n        for (var i = 0; i < this.y + 2; i++) {\r\n            this.array[i] = [];\r\n            for (var j = 0; j < this.x + 2; j++) {\r\n                if (j == 0 || j == this.x + 1 || i == 0 || i == this.y + 1)\r\n                    this.array[i][j] = 'X';\r\n                else\r\n                    this.array[i][j] = 0;\r\n            }\r\n        }\r\n        // console.table(this.array)\r\n    };\r\n    CreateTable.prototype.createGameBoard = function () {\r\n        var gameBoard = document.createElement(\"div\");\r\n        gameBoard.className = \"gameBoard\";\r\n        gameBoard.id = \"gameBoard\";\r\n        document.body.appendChild(gameBoard);\r\n        var tableDiv = document.createElement(\"div\");\r\n        tableDiv.className = \"tableDiv\";\r\n        tableDiv.id = \"tableDiv\";\r\n        document.getElementById(\"gameBoard\").appendChild(tableDiv);\r\n        var odleglosc = 5;\r\n        for (var i = 0; i < this.y; i++) {\r\n            for (var j = 0; j < this.x; j++) {\r\n                var div = document.createElement(\"div\");\r\n                div.style.position = \"absolute\";\r\n                div.className = \"table\";\r\n                div.id = i + \"_\" + j;\r\n                // div.style.backgroundColor = \"black\"\r\n                // div.style.backgroundImage = 'url(./assets/piece_A.png)'\r\n                // div.style.padding = \"5px\"\r\n                div.style.width = config.table.blockWidth + 'px';\r\n                div.style.height = config.table.blockWidth + 'px';\r\n                div.style.left = 823 + config.table.blockWidth * j + odleglosc * j + \"px\";\r\n                div.style.top = 180 + config.table.blockWidth * i + odleglosc * i + \"px\";\r\n                document.getElementById(\"tableDiv\").appendChild(div);\r\n            }\r\n        }\r\n        this.goPlay();\r\n    };\r\n    CreateTable.prototype.goPlay = function () {\r\n        var play = new _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.array, this.gameLevel);\r\n    };\r\n    return CreateTable;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CreateTable);\r\n\n\n//# sourceURL=webpack://tetris/./src/components/CreateTable.ts?");

/***/ }),

/***/ "./src/components/Game.ts":
/*!********************************!*\
  !*** ./src/components/Game.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _KeyboardKeys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./KeyboardKeys */ \"./src/components/KeyboardKeys.ts\");\n\r\nvar config = __webpack_require__(/*! ./config.json */ \"./src/components/config.json\");\r\nvar Game = /** @class */ (function () {\r\n    function Game(array, level) {\r\n        var _this = this;\r\n        this.array = [];\r\n        this.blockID = 0;\r\n        this.end = false;\r\n        this.gameScore = 0;\r\n        this.gameLines = 0;\r\n        this.onKeyDown = function (event, piece) {\r\n            // console.log(event.key)\r\n            switch (event.keyCode) {\r\n                case _KeyboardKeys__WEBPACK_IMPORTED_MODULE_0__[\"default\"].up:\r\n                    break;\r\n                case _KeyboardKeys__WEBPACK_IMPORTED_MODULE_0__[\"default\"].left:\r\n                    var chekLeft = _this.checkLeftBeforeMove(piece);\r\n                    if (chekLeft) {\r\n                        _this.clearBoard();\r\n                        _this.cleanArrayBeforeMove();\r\n                        _this.movePiece({ piece: piece, cord: 'x', value: -1 });\r\n                        _this.addPieceToArray(piece);\r\n                        _this.addPieceToBoard(piece);\r\n                        // console.clear()\r\n                        // console.table(this.array)\r\n                        // console.log(this.leftLevel)\r\n                        return piece;\r\n                    }\r\n                    break;\r\n                case _KeyboardKeys__WEBPACK_IMPORTED_MODULE_0__[\"default\"].right:\r\n                    var chekRight = _this.checkRightBeforeMove(piece);\r\n                    if (chekRight) {\r\n                        _this.clearBoard();\r\n                        _this.cleanArrayBeforeMove();\r\n                        _this.movePiece({ piece: piece, cord: 'x', value: 1 });\r\n                        _this.addPieceToArray(piece);\r\n                        _this.addPieceToBoard(piece);\r\n                        // console.clear()\r\n                        // console.table(this.array)\r\n                        // console.log(this.leftLevel)\r\n                        return piece;\r\n                    }\r\n                    break;\r\n                case _KeyboardKeys__WEBPACK_IMPORTED_MODULE_0__[\"default\"].down:\r\n                    var chekDown = _this.checkDownBeforeFall(piece);\r\n                    if (chekDown) {\r\n                        _this.clearBoard();\r\n                        _this.cleanArrayBeforeMove();\r\n                        _this.movePiece({ piece: piece, cord: 'y', value: 1 });\r\n                        _this.addPieceToArray(piece);\r\n                        _this.addPieceToBoard(piece);\r\n                        // console.clear()\r\n                        // console.table(this.array)\r\n                        // console.log(piece)\r\n                        return piece;\r\n                    }\r\n                    break;\r\n                case _KeyboardKeys__WEBPACK_IMPORTED_MODULE_0__[\"default\"].leftArrow:\r\n                    if (piece.symbol.length == 4) {\r\n                        var newSymbol = null;\r\n                        var arr = [1, 1, 1, 1];\r\n                        if (piece.symbol[2][0] == 1)\r\n                            newSymbol = [[0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0]];\r\n                        else if (piece.symbol[3][1] == 1)\r\n                            newSymbol = [[0, 0, 0, 0], [0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0]];\r\n                        var oldSymbol = piece.symbol;\r\n                        piece.symbol = newSymbol;\r\n                        var newCords = [];\r\n                        var id = 0;\r\n                        for (var k = 0; k < newSymbol.length; k++) {\r\n                            for (var l = 0; l < newSymbol[k].length; l++) {\r\n                                if (newSymbol[k][l] == 1) {\r\n                                    newCords.push({ x: l + 4 + piece.levels.leftLevel, y: k - 1 + piece.levels.fallLevel, id: id, state: 1 });\r\n                                    id++;\r\n                                }\r\n                            }\r\n                        }\r\n                        var check = _this.checkBeforeRotate(newCords);\r\n                        if (check) {\r\n                            piece.cords = newCords;\r\n                            _this.clearBoard();\r\n                            _this.cleanArrayBeforeMove();\r\n                            _this.addPieceToArray(piece);\r\n                            _this.addPieceToBoard(piece);\r\n                            // console.clear()\r\n                            // console.table(this.array)\r\n                            // console.table(piece.symbol)\r\n                        }\r\n                        else {\r\n                            piece.symbol = oldSymbol;\r\n                        }\r\n                    }\r\n                    else if (piece.symbol.length == 3) {\r\n                        var newSymbol = [[0, 0, 0], [0, 1, 0], [0, 0, 0]];\r\n                        if (piece.symbol[0][0] == 1)\r\n                            newSymbol[0][2] = 1;\r\n                        if (piece.symbol[0][2] == 1)\r\n                            newSymbol[2][2] = 1;\r\n                        if (piece.symbol[2][2] == 1)\r\n                            newSymbol[2][0] = 1;\r\n                        if (piece.symbol[2][0] == 1)\r\n                            newSymbol[0][0] = 1;\r\n                        if (piece.symbol[0][1] == 1)\r\n                            newSymbol[1][2] = 1;\r\n                        if (piece.symbol[1][2] == 1)\r\n                            newSymbol[2][1] = 1;\r\n                        if (piece.symbol[2][1] == 1)\r\n                            newSymbol[1][0] = 1;\r\n                        if (piece.symbol[1][0] == 1)\r\n                            newSymbol[0][1] = 1;\r\n                        var oldSymbol = piece.symbol;\r\n                        piece.symbol = newSymbol;\r\n                        var newCords = [];\r\n                        var id = 0;\r\n                        for (var k = 0; k < newSymbol.length; k++) {\r\n                            for (var l = 0; l < newSymbol[k].length; l++) {\r\n                                if (newSymbol[k][l] == 1) {\r\n                                    newCords.push({ x: l + 4 + piece.levels.leftLevel, y: k - 1 + piece.levels.fallLevel, id: id, state: 1 });\r\n                                    id++;\r\n                                }\r\n                            }\r\n                        }\r\n                        var check = _this.checkBeforeRotate(newCords);\r\n                        if (check) {\r\n                            piece.cords = newCords;\r\n                            _this.clearBoard();\r\n                            _this.cleanArrayBeforeMove();\r\n                            _this.addPieceToArray(piece);\r\n                            _this.addPieceToBoard(piece);\r\n                            // console.clear()\r\n                            // console.table(this.array)\r\n                            // console.table(piece.symbol)\r\n                        }\r\n                        else {\r\n                            piece.symbol = oldSymbol;\r\n                        }\r\n                    }\r\n                    break;\r\n                case _KeyboardKeys__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rightArrow:\r\n                    if (piece.symbol.length == 4) {\r\n                        var newSymbol = null;\r\n                        var arr = [1, 1, 1, 1];\r\n                        if (piece.symbol[2][0] == 1)\r\n                            newSymbol = [[0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0]];\r\n                        else if (piece.symbol[3][1] == 1)\r\n                            newSymbol = [[0, 0, 0, 0], [0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0]];\r\n                        var oldSymbol = piece.symbol;\r\n                        piece.symbol = newSymbol;\r\n                        var newCords = [];\r\n                        var id = 0;\r\n                        for (var k = 0; k < newSymbol.length; k++) {\r\n                            for (var l = 0; l < newSymbol[k].length; l++) {\r\n                                if (newSymbol[k][l] == 1) {\r\n                                    newCords.push({ x: l + 4 + piece.levels.leftLevel, y: k - 1 + piece.levels.fallLevel, id: id, state: 1 });\r\n                                    id++;\r\n                                }\r\n                            }\r\n                        }\r\n                        var check = _this.checkBeforeRotate(newCords);\r\n                        if (check) {\r\n                            piece.cords = newCords;\r\n                            _this.clearBoard();\r\n                            _this.cleanArrayBeforeMove();\r\n                            _this.addPieceToArray(piece);\r\n                            _this.addPieceToBoard(piece);\r\n                            // console.clear()\r\n                            // console.table(this.array)\r\n                            // console.table(piece.symbol)\r\n                        }\r\n                        else {\r\n                            piece.symbol = oldSymbol;\r\n                        }\r\n                    }\r\n                    else if (piece.symbol.length == 3) {\r\n                        var newSymbol = [[0, 0, 0], [0, 1, 0], [0, 0, 0]];\r\n                        if (piece.symbol[0][0] == 1)\r\n                            newSymbol[2][0] = 1;\r\n                        if (piece.symbol[0][2] == 1)\r\n                            newSymbol[0][0] = 1;\r\n                        if (piece.symbol[2][2] == 1)\r\n                            newSymbol[0][2] = 1;\r\n                        if (piece.symbol[2][0] == 1)\r\n                            newSymbol[2][2] = 1;\r\n                        if (piece.symbol[0][1] == 1)\r\n                            newSymbol[1][0] = 1;\r\n                        if (piece.symbol[1][2] == 1)\r\n                            newSymbol[0][1] = 1;\r\n                        if (piece.symbol[2][1] == 1)\r\n                            newSymbol[1][2] = 1;\r\n                        if (piece.symbol[1][0] == 1)\r\n                            newSymbol[2][1] = 1;\r\n                        var oldSymbol = piece.symbol;\r\n                        piece.symbol = newSymbol;\r\n                        var newCords = [];\r\n                        var id = 0;\r\n                        for (var k = 0; k < newSymbol.length; k++) {\r\n                            for (var l = 0; l < newSymbol[k].length; l++) {\r\n                                if (newSymbol[k][l] == 1) {\r\n                                    newCords.push({ x: l + 4 + piece.levels.leftLevel, y: k - 1 + piece.levels.fallLevel, id: id, state: 1 });\r\n                                    id++;\r\n                                }\r\n                            }\r\n                        }\r\n                        var check = _this.checkBeforeRotate(newCords);\r\n                        if (check) {\r\n                            piece.cords = newCords;\r\n                            _this.clearBoard();\r\n                            _this.cleanArrayBeforeMove();\r\n                            _this.addPieceToArray(piece);\r\n                            _this.addPieceToBoard(piece);\r\n                            // console.clear()\r\n                            // console.table(this.array)\r\n                            // console.table(piece.symbol)\r\n                        }\r\n                        else {\r\n                            piece.symbol = oldSymbol;\r\n                        }\r\n                    }\r\n                    break;\r\n                case _KeyboardKeys__WEBPACK_IMPORTED_MODULE_0__[\"default\"].enter:\r\n                    break;\r\n            }\r\n        };\r\n        this.x = config.table.rows;\r\n        this.y = config.table.columns;\r\n        this.array = array;\r\n        this.gameLevel = level;\r\n        var lines = document.createElement(\"div\");\r\n        lines.style.position = \"absolute\";\r\n        lines.id = \"lines\";\r\n        lines.style.backgroundColor = \"black\";\r\n        lines.style.width = (10 * config.table.blockWidth + 10 * 5) / 3 + 'px';\r\n        lines.style.height = 1.5 * config.table.blockWidth + 'px';\r\n        lines.style.left = 833 + (10 * config.table.blockWidth + 10 * 5) / 3 * 2 + \"px\";\r\n        lines.style.top = 76 + \"px\";\r\n        lines.innerHTML = '000';\r\n        lines.style.fontSize = \"36px\";\r\n        document.getElementById(\"tableDiv\").appendChild(lines);\r\n        console.table(this.array);\r\n        var levelDiv = document.createElement(\"div\");\r\n        levelDiv.style.position = \"absolute\";\r\n        levelDiv.id = \"level\";\r\n        levelDiv.style.backgroundColor = \"black\";\r\n        levelDiv.style.width = (10 * config.table.blockWidth + 10 * 5) / 4 + 'px';\r\n        levelDiv.style.height = 1.5 * config.table.blockWidth + 'px';\r\n        levelDiv.style.left = 1278 + \"px\";\r\n        levelDiv.style.top = 696.5 + \"px\";\r\n        levelDiv.innerHTML = '0' + this.gameLevel.toString();\r\n        levelDiv.style.fontSize = \"36px\";\r\n        document.getElementById(\"tableDiv\").appendChild(levelDiv);\r\n        console.table(this.array);\r\n        var scoreDiv = document.createElement(\"div\");\r\n        scoreDiv.style.position = \"absolute\";\r\n        scoreDiv.id = \"score\";\r\n        scoreDiv.style.backgroundColor = \"black\";\r\n        scoreDiv.style.width = 215 + 'px';\r\n        scoreDiv.style.height = 1.5 * config.table.blockWidth + 'px';\r\n        scoreDiv.style.left = 1228 + \"px\";\r\n        scoreDiv.style.top = 249 + \"px\";\r\n        scoreDiv.innerHTML = ' 000000';\r\n        scoreDiv.style.fontSize = \"34px\";\r\n        document.getElementById(\"tableDiv\").appendChild(scoreDiv);\r\n        console.table(this.array);\r\n        var firstPieceSymbol = this.randomPiece();\r\n        var nextPieceSymbol = this.randomPiece();\r\n        this.currentPiece = this.newPiece(firstPieceSymbol);\r\n        this.nextPiece = this.newPiece(nextPieceSymbol);\r\n        this.addPieceToArray(this.currentPiece);\r\n        this.addPieceToBoard(this.currentPiece);\r\n        document.body.addEventListener(\"keydown\", function (event) { return _this.onKeyDown(event, _this.currentPiece); }, false);\r\n        // console.log(\"this.currentPiece\")\r\n        // console.log((this.currentPiece).symbol)\r\n        var fall = function () {\r\n            _this.fallPiece(_this.currentPiece);\r\n        };\r\n        this.fallingInterval = setInterval(fall, 1000 / (this.gameLevel + 1));\r\n        // console.table(this.array)\r\n    }\r\n    Game.prototype.randomPiece = function () {\r\n        var randomSymbolNum = Math.floor(Math.random() * config.game.pieces.length);\r\n        var odleglosc = 4;\r\n        var allNext = document.querySelectorAll(\".nexTable\");\r\n        // console.log(allNext)\r\n        for (var i = 0; i < allNext.length; i++) {\r\n            allNext[i].remove();\r\n        }\r\n        if (randomSymbolNum == 3) {\r\n            for (var i = 0; i < 2; i++) {\r\n                for (var j = 0; j < 2; j++) {\r\n                    var div = document.createElement(\"div\");\r\n                    div.style.position = \"absolute\";\r\n                    div.className = \"nexTable\";\r\n                    div.id = i + \"_\" + j;\r\n                    // div.style.backgroundColor = \"black\"\r\n                    // div.style.backgroundImage = 'url(./assets/piece_A.png)'\r\n                    // div.style.padding = \"5px\"\r\n                    div.style.width = config.table.blockWidth + 'px';\r\n                    div.style.backgroundImage = \"url(./assets/piece_A.png\";\r\n                    div.style.backgroundPosition = 'center';\r\n                    div.style.backgroundRepeat = ' no-repeat';\r\n                    div.style.backgroundSize = 'cover';\r\n                    div.style.height = config.table.blockWidth + 'px';\r\n                    div.style.left = 1260 + config.table.blockWidth * j + odleglosc * j + \"px\";\r\n                    div.style.top = 495 + config.table.blockWidth * i + odleglosc * i + \"px\";\r\n                    document.getElementById(\"tableDiv\").appendChild(div);\r\n                }\r\n            }\r\n        }\r\n        else if (randomSymbolNum != 6) {\r\n            for (var i = 0; i < 3; i++) {\r\n                for (var j = 0; j < 3; j++) {\r\n                    var div = document.createElement(\"div\");\r\n                    div.style.position = \"absolute\";\r\n                    div.className = \"nexTable\";\r\n                    div.id = i + \"_\" + j;\r\n                    if (randomSymbolNum == 0) {\r\n                        if (i == 1) {\r\n                            div.style.backgroundImage = \"url(./assets/piece_A.png\";\r\n                            div.style.backgroundPosition = 'center';\r\n                            div.style.backgroundRepeat = ' no-repeat';\r\n                            div.style.backgroundSize = 'cover';\r\n                        }\r\n                        if (i == 2 && j == 1) {\r\n                            div.style.backgroundImage = \"url(./assets/piece_A.png\";\r\n                            div.style.backgroundPosition = 'center';\r\n                            div.style.backgroundRepeat = ' no-repeat';\r\n                            div.style.backgroundSize = 'cover';\r\n                        }\r\n                    }\r\n                    else if (randomSymbolNum == 1) {\r\n                        if (i == 1) {\r\n                            div.style.backgroundImage = \"url(./assets/piece_B.png\";\r\n                            div.style.backgroundPosition = 'center';\r\n                            div.style.backgroundRepeat = ' no-repeat';\r\n                            div.style.backgroundSize = 'cover';\r\n                        }\r\n                        if (i == 2 && j == 2) {\r\n                            div.style.backgroundImage = \"url(./assets/piece_B.png\";\r\n                            div.style.backgroundPosition = 'center';\r\n                            div.style.backgroundRepeat = ' no-repeat';\r\n                            div.style.backgroundSize = 'cover';\r\n                        }\r\n                    }\r\n                    else if (randomSymbolNum == 2) {\r\n                        if (i == 1 && j != 2) {\r\n                            div.style.backgroundImage = \"url(./assets/piece_C.png\";\r\n                            div.style.backgroundPosition = 'center';\r\n                            div.style.backgroundRepeat = ' no-repeat';\r\n                            div.style.backgroundSize = 'cover';\r\n                        }\r\n                        if (i == 2 && j != 0) {\r\n                            div.style.backgroundImage = \"url(./assets/piece_C.png\";\r\n                            div.style.backgroundPosition = 'center';\r\n                            div.style.backgroundRepeat = ' no-repeat';\r\n                            div.style.backgroundSize = 'cover';\r\n                        }\r\n                    }\r\n                    else if (randomSymbolNum == 4) {\r\n                        if (i == 1 && j != 0) {\r\n                            div.style.backgroundImage = \"url(./assets/piece_B.png\";\r\n                            div.style.backgroundPosition = 'center';\r\n                            div.style.backgroundRepeat = ' no-repeat';\r\n                            div.style.backgroundSize = 'cover';\r\n                        }\r\n                        if (i == 2 && j != 2) {\r\n                            div.style.backgroundImage = \"url(./assets/piece_B.png\";\r\n                            div.style.backgroundPosition = 'center';\r\n                            div.style.backgroundRepeat = ' no-repeat';\r\n                            div.style.backgroundSize = 'cover';\r\n                        }\r\n                    }\r\n                    else if (randomSymbolNum == 5) {\r\n                        if (i == 1) {\r\n                            div.style.backgroundImage = \"url(./assets/piece_C.png\";\r\n                            div.style.backgroundPosition = 'center';\r\n                            div.style.backgroundRepeat = ' no-repeat';\r\n                            div.style.backgroundSize = 'cover';\r\n                        }\r\n                        if (i == 2 && j == 0) {\r\n                            div.style.backgroundImage = \"url(./assets/piece_C.png\";\r\n                            div.style.backgroundPosition = 'center';\r\n                            div.style.backgroundRepeat = ' no-repeat';\r\n                            div.style.backgroundSize = 'cover';\r\n                        }\r\n                    }\r\n                    div.style.width = config.table.blockWidth + 'px';\r\n                    div.style.height = config.table.blockWidth + 'px';\r\n                    div.style.left = 1244 + config.table.blockWidth * j + odleglosc * j + \"px\";\r\n                    div.style.top = 477 + config.table.blockWidth * i + odleglosc * i + \"px\";\r\n                    document.getElementById(\"tableDiv\").appendChild(div);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 4; i++) {\r\n                for (var j = 0; j < 4; j++) {\r\n                    var div = document.createElement(\"div\");\r\n                    div.style.position = \"absolute\";\r\n                    div.className = \"nexTable\";\r\n                    div.id = i + \"_\" + j;\r\n                    // div.style.backgroundColor = \"black\"\r\n                    // div.style.backgroundImage = 'url(./assets/piece_A.png)'\r\n                    // div.style.padding = \"5px\"\r\n                    div.style.width = config.table.blockWidth + 'px';\r\n                    div.style.height = config.table.blockWidth + 'px';\r\n                    if (i == 2) {\r\n                        div.style.backgroundImage = \"url(./assets/piece_A.png\";\r\n                        div.style.backgroundPosition = 'center';\r\n                        div.style.backgroundRepeat = ' no-repeat';\r\n                        div.style.backgroundSize = 'cover';\r\n                    }\r\n                    div.style.left = 1228 + config.table.blockWidth * j + odleglosc * j + \"px\";\r\n                    div.style.top = 459 + config.table.blockWidth * i + odleglosc * i + \"px\";\r\n                    document.getElementById(\"tableDiv\").appendChild(div);\r\n                }\r\n            }\r\n        }\r\n        return randomSymbolNum;\r\n    };\r\n    Game.prototype.newPiece = function (symbol) {\r\n        var cords = [];\r\n        var pieceImgArr = [\"piece_A\", \"piece_B\", \"piece_C\"];\r\n        var pieceImg;\r\n        if (symbol == 0 || symbol == 3 || symbol == 6) {\r\n            pieceImg = pieceImgArr[0];\r\n        }\r\n        else if (symbol == 1 || symbol == 4) {\r\n            pieceImg = pieceImgArr[1];\r\n        }\r\n        else if (symbol == 2 || symbol == 5) {\r\n            pieceImg = pieceImgArr[2];\r\n        }\r\n        for (var i = 0; i < config.game.pieces[symbol].length; i++) {\r\n            for (var j = 0; j < config.game.pieces[symbol][i].length; j++) {\r\n                if (config.game.pieces[symbol][i][j] == 1) {\r\n                    cords.push({ x: j + 4, y: i - 1, id: this.blockID, state: 1 });\r\n                    this.blockID = this.blockID + 1;\r\n                }\r\n            }\r\n        }\r\n        return new Object({ cords: cords, symbol: config.game.pieces[symbol], levels: { fallLevel: 0, leftLevel: 0 }, img: pieceImg });\r\n    };\r\n    Game.prototype.fallPiece = function (piece) {\r\n        // console.log(piece)\r\n        var chekDown = this.checkDownBeforeFall(piece);\r\n        if (chekDown) {\r\n            this.clearBoard();\r\n            this.cleanArrayBeforeMove();\r\n            this.movePiece({ piece: piece, cord: 'y', value: 1 });\r\n            this.addPieceToArray(piece);\r\n            this.addPieceToBoard(piece);\r\n            // console.clear()\r\n            // console.table(this.array)\r\n            // console.clear()\r\n            // console.table(this.array)\r\n            // console.log(this.fallLevel + \" : \")\r\n            // console.log(this.leftLevel + \" : \")\r\n            // console.log(piece)\r\n            var chekDownOneMore = this.checkDownBeforeFall(piece);\r\n            if (!chekDownOneMore) {\r\n                if (this.end == false) {\r\n                    for (var i = 0; i < piece.cords.length; i++) {\r\n                        piece.cords[i].state = 2;\r\n                        this.array[piece.cords[i].y][piece.cords[i].x] = piece.cords[i].state;\r\n                    }\r\n                    // console.clear()\r\n                    // console.table(this.array)\r\n                    // console.log(piece)\r\n                    this.endOfFalling();\r\n                }\r\n                else {\r\n                    this.endGame();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this.end == false) {\r\n                for (var i = 0; i < piece.cords.length; i++) {\r\n                    piece.cords[i].state = 2;\r\n                    this.array[piece.cords[i].y][piece.cords[i].x] = piece.cords[i].state;\r\n                }\r\n                // console.clear()\r\n                // console.table(this.array)\r\n                // console.log(piece)\r\n                this.endOfFalling();\r\n            }\r\n            else {\r\n                this.endGame();\r\n            }\r\n        }\r\n    };\r\n    Game.prototype.cleanArrayBeforeMove = function () {\r\n        for (var i = 0; i <= config.table.rows; i++) {\r\n            for (var j = 0; j <= config.table.columns; j++) {\r\n                if (this.array[j][i] == 1) {\r\n                    this.array[j][i] = 0;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Game.prototype.movePiece = function (_a) {\r\n        var piece = _a.piece, cord = _a.cord, value = _a.value;\r\n        for (var i = 0; i < piece.cords.length; i++) {\r\n            if (cord == 'x') {\r\n                piece.cords[i].x = piece.cords[i].x + value;\r\n            }\r\n            else if (cord == 'y') {\r\n                piece.cords[i].y = piece.cords[i].y + value;\r\n            }\r\n        }\r\n        if (cord == 'y') {\r\n            piece.levels.fallLevel = piece.levels.fallLevel + value;\r\n        }\r\n        else if (cord == 'x') {\r\n            piece.levels.leftLevel = piece.levels.leftLevel + value;\r\n        }\r\n        return piece;\r\n    };\r\n    Game.prototype.addPieceToArray = function (piece) {\r\n        for (var i = 0; i < piece.cords.length; i++) {\r\n            if (this.array[piece.cords[i].y][piece.cords[i].x] != \"X\") {\r\n                this.array[piece.cords[i].y][piece.cords[i].x] = piece.cords[i].state;\r\n            }\r\n        }\r\n    };\r\n    Game.prototype.addPieceToBoard = function (piece) {\r\n        var board;\r\n        board = Array.from(document.querySelectorAll('.table'));\r\n        for (var i = 0; i < board.length; i++) {\r\n            var id = board[i].id.split('_');\r\n            for (var j = 0; j < piece.cords.length; j++) {\r\n                if (piece.cords[j].x - 1 == parseInt(id[1]) &&\r\n                    piece.cords[j].y - 1 == parseInt(id[0])) {\r\n                    // board[i].innerHTML = \"x\"\r\n                    // let img: HTMLImageElement = document.createElement(\"img\");\r\n                    // img.id = \"pieceImg\";\r\n                    // img.style.position = \"absolute\"\r\n                    // img.style.top = parseInt(board[i].style.top) + config.table.blockWidth / 4 + 'px';\r\n                    // img.style.left = parseInt(board[i].style.left) + config.table.blockWidth / 4 + 'px';\r\n                    // img.src = './assets/' + piece.img + '.png';\r\n                    // document.getElementById(\"gameBoard\").appendChild(img)\r\n                    board[i].style.backgroundImage = 'url(\"./assets/' + piece.img + '.png\")';\r\n                    board[i].style.backgroundPosition = 'center'; /* Center the image */\r\n                    board[i].style.backgroundRepeat = ' no-repeat'; /* Do not repeat the image */\r\n                    board[i].style.backgroundSize = 'cover'; /* Resize the background image to cover the entire container */\r\n                    // console.log('url(\"./assets/\"' + piece.img + '.png)')\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Game.prototype.clearBoard = function () {\r\n        var board;\r\n        board = Array.from(document.querySelectorAll('.table'));\r\n        // for (let k = 0; k < board.length; k++) {\r\n        //     if (board[k].innerHTML == \"X\") {\r\n        //         board[k].innerHTML = \"\"\r\n        //         let id = board[k].id.split('_')\r\n        //         console.log(parseInt(id[1]) + 1, parseInt(id[0]) + 1)\r\n        //     }\r\n        // }\r\n        // console.log(\"przerwaaaaaaaaaaa\")\r\n        // for (let i = 1; i < this.y + 2; i++) {\r\n        //     for (let j = 1; j < this.x + 2; j++) {\r\n        //         if (this.array[i - 1][j - 1] == 1) {\r\n        //             console.log(j - 1, i - 1)\r\n        //         }\r\n        //     }\r\n        // }\r\n        for (var i = 1; i < this.y + 2; i++) {\r\n            for (var j = 1; j < this.x + 2; j++) {\r\n                if (this.array[i - 1][j - 1] == 1) {\r\n                    for (var k = 0; k < board.length; k++) {\r\n                        var id = board[k].id.split('_');\r\n                        if (parseInt(id[1]) + 1 == j - 1) {\r\n                            if (parseInt(id[0]) + 1 == i - 1) {\r\n                                // boassrd[k].innerHTML = ''\r\n                                board[k].style.backgroundImage = '';\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Game.prototype.checkDownBeforeFall = function (piece) {\r\n        var isGood = 0; //=0 - is good | >0 - is not good\r\n        for (var i = 0; i < piece.cords.length; i++) {\r\n            if (piece.cords[i].y == 20) {\r\n                isGood++;\r\n            }\r\n            else if (this.array[piece.cords[i].y + 1][piece.cords[i].x] == 2) {\r\n                isGood++;\r\n                if (piece.levels.fallLevel == 0)\r\n                    this.end = true;\r\n            }\r\n            // console.log(this.array[piece.cords[i].y + 1][piece.cords[i].x])\r\n        }\r\n        return (isGood == 0);\r\n    };\r\n    Game.prototype.checkLeftBeforeMove = function (piece) {\r\n        var isGood = 0; //=0 - is good | >0 - is not good\r\n        for (var i = 0; i < piece.cords.length; i++) {\r\n            if (this.array[piece.cords[i].y][piece.cords[i].x - 1] == 'X' ||\r\n                this.array[piece.cords[i].y][piece.cords[i].x - 1] == 2) {\r\n                isGood++;\r\n            }\r\n        }\r\n        return (isGood == 0);\r\n    };\r\n    Game.prototype.checkRightBeforeMove = function (piece) {\r\n        var isGood = 0; //=0 - is good | >0 - is not good\r\n        for (var i = 0; i < piece.cords.length; i++) {\r\n            if (this.array[piece.cords[i].y][piece.cords[i].x + 1] == 'X' ||\r\n                this.array[piece.cords[i].y][piece.cords[i].x + 1] == 2) {\r\n                isGood++;\r\n            }\r\n        }\r\n        return (isGood == 0);\r\n    };\r\n    Game.prototype.checkBeforeRotate = function (cords) {\r\n        var isGood = 0; //=0 - is good | >0 - is not good\r\n        // console.log(cords)\r\n        for (var i = 0; i < cords.length; i++) {\r\n            if (this.array[cords[i].y][cords[i].x] == 'X' ||\r\n                this.array[cords[i].y][cords[i].x] == 2) {\r\n                isGood++;\r\n            }\r\n        }\r\n        return (isGood == 0);\r\n    };\r\n    Game.prototype.endOfFalling = function () {\r\n        var _this = this;\r\n        clearInterval(this.fallingInterval);\r\n        document.body.removeEventListener(\"keydown\", function (event) { return _this.onKeyDown(event, _this.currentPiece); }, false);\r\n        // console.log(\"end\")\r\n        this.checkCapture();\r\n    };\r\n    Game.prototype.checkCapture = function () {\r\n        var howManyLines = 0;\r\n        for (var i = 1; i < this.y + 2; i++) {\r\n            if (this.array[i - 1][1] == 2)\r\n                if (this.array[i - 1][2] == 2)\r\n                    if (this.array[i - 1][3] == 2)\r\n                        if (this.array[i - 1][4] == 2)\r\n                            if (this.array[i - 1][5] == 2)\r\n                                if (this.array[i - 1][6] == 2)\r\n                                    if (this.array[i - 1][7] == 2)\r\n                                        if (this.array[i - 1][8] == 2)\r\n                                            if (this.array[i - 1][9] == 2)\r\n                                                if (this.array[i - 1][10] == 2) {\r\n                                                    this.capture(i);\r\n                                                    this.gameLines++;\r\n                                                    howManyLines++;\r\n                                                }\r\n        }\r\n        this.score(howManyLines);\r\n        this.nextMove();\r\n    };\r\n    Game.prototype.score = function (lines) {\r\n        if (lines == 1) {\r\n            this.gameScore += 40 * (this.gameLevel + 1);\r\n        }\r\n        else if (lines == 2) {\r\n            this.gameScore += 100 * (this.gameLevel + 1);\r\n        }\r\n        else if (lines == 3) {\r\n            this.gameScore += 300 * (this.gameLevel + 1);\r\n        }\r\n        else if (lines == 4) {\r\n            this.gameScore += 1200 * (this.gameLevel + 1);\r\n        }\r\n        var scoreDiv = document.getElementById(\"score\");\r\n        if (this.gameScore.toString().length == 1)\r\n            scoreDiv.innerHTML = ' 00000' + this.gameScore.toString();\r\n        else if (this.gameScore.toString().length == 2)\r\n            scoreDiv.innerHTML = ' 0000' + this.gameScore.toString();\r\n        else if (this.gameScore.toString().length == 3)\r\n            scoreDiv.innerHTML = ' 000' + this.gameScore.toString();\r\n        else if (this.gameScore.toString().length == 4)\r\n            scoreDiv.innerHTML = ' 00' + this.gameScore.toString();\r\n        else if (this.gameScore.toString().length == 5)\r\n            scoreDiv.innerHTML = ' 0' + this.gameScore.toString();\r\n        else if (this.gameScore.toString().length == 6)\r\n            scoreDiv.innerHTML = this.gameScore.toString();\r\n    };\r\n    Game.prototype.capture = function (col) {\r\n        var board;\r\n        board = Array.from(document.querySelectorAll('.table'));\r\n        console.log(col);\r\n        for (var i = 1; i < this.y + 2; i++) {\r\n            this.array[col - 1][i - 1] = 0;\r\n        }\r\n        for (var i = 1; i < this.y + 2; i++) {\r\n            for (var k = 0; k < board.length; k++) {\r\n                var id = board[k].id.split('_');\r\n                if (parseInt(id[1]) + 1 == i - 1) {\r\n                    if (parseInt(id[0]) + 1 == col - 1) {\r\n                        // boassrd[k].innerHTML = ''\r\n                        board[k].style.backgroundImage = '';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Game.prototype.nextMove = function () {\r\n        var _this = this;\r\n        this.currentPiece = this.nextPiece;\r\n        var nextPieceSymbol = this.randomPiece();\r\n        this.nextPiece = this.newPiece(nextPieceSymbol);\r\n        var fall = function () {\r\n            _this.fallPiece(_this.currentPiece);\r\n        };\r\n        this.fallingInterval = setInterval(fall, 1000 / (this.gameLevel + 1));\r\n        var div = document.getElementById('lines');\r\n        if (this.gameLines.toString().length == 1) {\r\n            div.innerHTML = '00' + this.gameLines;\r\n        }\r\n        else if (this.gameLines.toString().length == 2) {\r\n            div.innerHTML = '0' + this.gameLines;\r\n        }\r\n        else if (this.gameLines.toString().length == 3) {\r\n            div.innerHTML = this.gameLines.toString();\r\n        }\r\n        console.log(div);\r\n    };\r\n    Game.prototype.endGame = function () {\r\n        var board;\r\n        board = Array.from(document.querySelectorAll('.table'));\r\n        for (var i = 1; i < this.y + 2; i++) {\r\n            for (var j = 1; j < this.x + 2; j++) {\r\n                for (var k = 0; k < board.length; k++) {\r\n                    var id = board[k].id.split('_');\r\n                    board[k].style.backgroundImage = '';\r\n                }\r\n            }\r\n        }\r\n        console.log(\"over\");\r\n        var allNext = document.querySelectorAll(\".nexTable\");\r\n        // console.log(allNext)\r\n        for (var i = 0; i < allNext.length; i++) {\r\n            allNext[i].remove();\r\n        }\r\n        var _loop_1 = function (i) {\r\n            setTimeout(function () {\r\n                var img = document.createElement(\"img\");\r\n                img.id = \"pieceImg\";\r\n                img.style.width = \"17%\";\r\n                img.style.position = \"absolute\";\r\n                img.style.top = parseInt(board[i].style.top) + config.table.blockWidth / 4 + 'px';\r\n                img.style.left = parseInt(board[i].style.left) + config.table.blockWidth / 4 + 'px';\r\n                img.src = './assets/end.png';\r\n                document.getElementById(\"gameBoard\").appendChild(img);\r\n            }, i / 10 * 50);\r\n        };\r\n        for (var i = 0; i < board.length; i = i + 10) {\r\n            _loop_1(i);\r\n        }\r\n        var goSetting = function (event) {\r\n            switch (event.keyCode) {\r\n                case _KeyboardKeys__WEBPACK_IMPORTED_MODULE_0__[\"default\"].enter:\r\n                    location.reload();\r\n                    document.body.removeEventListener(\"keydown\", goSetting, false);\r\n                    break;\r\n            }\r\n        };\r\n        document.body.addEventListener(\"keydown\", goSetting, false);\r\n    };\r\n    return Game;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Game);\r\n\n\n//# sourceURL=webpack://tetris/./src/components/Game.ts?");

/***/ }),

/***/ "./src/components/Home.ts":
/*!********************************!*\
  !*** ./src/components/Home.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _CreateTable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CreateTable */ \"./src/components/CreateTable.ts\");\n/* harmony import */ var _KeyboardKeys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./KeyboardKeys */ \"./src/components/KeyboardKeys.ts\");\n\r\n\r\nvar config = __webpack_require__(/*! ./config.json */ \"./src/components/config.json\");\r\nvar audio = new Audio;\r\nvar Home = /** @class */ (function () {\r\n    function Home() {\r\n        this.array = [];\r\n        // console.log(config.assets.credits.src)\r\n        this.createBoard();\r\n        // this.creditImg()\r\n        // this.goPlay()\r\n        this.goType_A();\r\n    }\r\n    Home.prototype.createBoard = function () {\r\n        var gameBoard = document.createElement(\"div\");\r\n        gameBoard.id = \"gameBoard\";\r\n        document.body.appendChild(gameBoard);\r\n    };\r\n    Home.prototype.creditImg = function () {\r\n        var _this = this;\r\n        var img = document.createElement(\"img\");\r\n        img.id = \"creditImg\";\r\n        img.style.width = \"90%\";\r\n        img.style.height = \"auto\";\r\n        img.style.display = \"block\";\r\n        img.style.marginLeft = \"auto\";\r\n        img.style.marginRight = \"auto\";\r\n        img.src = config.assets.credits.src;\r\n        document.getElementById(\"gameBoard\").appendChild(img);\r\n        setTimeout(function () {\r\n            img.remove();\r\n            _this.homePage();\r\n        }, 5000);\r\n    };\r\n    Home.prototype.homePage = function () {\r\n        var _this = this;\r\n        var img = document.createElement(\"img\");\r\n        img.id = \"homePage\";\r\n        img.style.width = \"90%\";\r\n        img.style.height = \"auto\";\r\n        img.style.display = \"block\";\r\n        img.style.marginLeft = \"auto\";\r\n        img.style.marginRight = \"auto\";\r\n        img.src = config.assets.home.src;\r\n        document.getElementById(\"gameBoard\").appendChild(img);\r\n        var goSetting = function (event) {\r\n            switch (event.keyCode) {\r\n                case _KeyboardKeys__WEBPACK_IMPORTED_MODULE_1__[\"default\"].enter:\r\n                    img.remove();\r\n                    _this.settingsPage();\r\n                    audio = new Audio('./assets/Music_1.ogg');\r\n                    audio.play();\r\n                    document.body.removeEventListener(\"keydown\", goSetting, false);\r\n                    break;\r\n            }\r\n        };\r\n        document.body.addEventListener(\"keydown\", goSetting, false);\r\n    };\r\n    Home.prototype.settingsPage = function () {\r\n        var _this = this;\r\n        var img = document.createElement(\"img\");\r\n        img.id = \"settingPage\";\r\n        img.style.width = \"90%\";\r\n        img.style.height = \"auto\";\r\n        img.style.display = \"block\";\r\n        img.style.marginLeft = \"auto\";\r\n        img.style.marginRight = \"auto\";\r\n        img.src = config.assets.settings.src;\r\n        document.getElementById(\"gameBoard\").appendChild(img);\r\n        var gameTypes = [\"A-TYPE\", \"B-TYPE\"];\r\n        var musicTypes = [\"MUSIC-1\", \"MUSIC-2\", \"MUSIC-3\", \"OFF\"];\r\n        var gameType = 0;\r\n        var musicType = 0;\r\n        var arrows = true;\r\n        var arrowsInterval = function () {\r\n            if (arrows) {\r\n                var leftGT = document.createElement(\"img\");\r\n                leftGT.id = \"leftArrowGT\";\r\n                leftGT.style.position = \"absolute\";\r\n                leftGT.style.width = \"1.5%\";\r\n                if (gameType == 0) {\r\n                    leftGT.style.left = \"685px\";\r\n                    leftGT.style.top = \"250px\";\r\n                }\r\n                else if (gameType == 1) {\r\n                    leftGT.style.left = \"1092px\";\r\n                    leftGT.style.top = \"250px\";\r\n                }\r\n                leftGT.src = config.assets.settings.leftArrow;\r\n                document.getElementById(\"gameBoard\").appendChild(leftGT);\r\n                var rightGT = document.createElement(\"img\");\r\n                rightGT.id = \"rightArrowGT\";\r\n                rightGT.style.position = \"absolute\";\r\n                rightGT.style.width = \"1.5%\";\r\n                if (gameType == 0) {\r\n                    rightGT.style.left = \"930px\";\r\n                    rightGT.style.top = \"250px\";\r\n                }\r\n                else if (gameType == 1) {\r\n                    rightGT.style.left = \"1333px\";\r\n                    rightGT.style.top = \"250px\";\r\n                }\r\n                rightGT.src = config.assets.settings.rightArrow;\r\n                document.getElementById(\"gameBoard\").appendChild(rightGT);\r\n                var leftMT = document.createElement(\"img\");\r\n                leftMT.id = \"leftArrowMT\";\r\n                leftMT.style.position = \"absolute\";\r\n                leftMT.style.width = \"1.5%\";\r\n                if (musicType == 0) {\r\n                    leftMT.style.left = \"855px\";\r\n                    leftMT.style.top = \"593px\";\r\n                }\r\n                else if (musicType == 1) {\r\n                    leftMT.style.left = \"855px\";\r\n                    leftMT.style.top = \"663px\";\r\n                }\r\n                else if (musicType == 2) {\r\n                    leftMT.style.left = \"855px\";\r\n                    leftMT.style.top = \"733px\";\r\n                }\r\n                else if (musicType == 3) {\r\n                    leftMT.style.left = \"855px\";\r\n                    leftMT.style.top = \"803px\";\r\n                }\r\n                leftMT.src = config.assets.settings.leftArrow;\r\n                document.getElementById(\"gameBoard\").appendChild(leftMT);\r\n                var rightMT = document.createElement(\"img\");\r\n                rightMT.id = \"rightArrowMT\";\r\n                rightMT.style.position = \"absolute\";\r\n                rightMT.style.width = \"1.5%\";\r\n                if (musicType == 0) {\r\n                    rightMT.style.left = \"1175px\";\r\n                    rightMT.style.top = \"593px\";\r\n                }\r\n                else if (musicType == 1) {\r\n                    rightMT.style.left = \"1175px\";\r\n                    rightMT.style.top = \"663px\";\r\n                }\r\n                else if (musicType == 2) {\r\n                    rightMT.style.left = \"1175px\";\r\n                    rightMT.style.top = \"733px\";\r\n                }\r\n                else if (musicType == 3) {\r\n                    rightMT.style.left = \"1175px\";\r\n                    rightMT.style.top = \"803px\";\r\n                }\r\n                rightMT.src = config.assets.settings.rightArrow;\r\n                document.getElementById(\"gameBoard\").appendChild(rightMT);\r\n            }\r\n            else {\r\n                document.getElementById(\"leftArrowGT\").remove();\r\n                document.getElementById(\"rightArrowGT\").remove();\r\n                document.getElementById(\"leftArrowMT\").remove();\r\n                document.getElementById(\"rightArrowMT\").remove();\r\n            }\r\n            arrows = !arrows;\r\n        };\r\n        var changeArrows = setInterval(arrowsInterval, 100);\r\n        var listener = function (event) {\r\n            switch (event.keyCode) {\r\n                case _KeyboardKeys__WEBPACK_IMPORTED_MODULE_1__[\"default\"].left:\r\n                    if (gameType == 1)\r\n                        gameType = 0;\r\n                    break;\r\n                case _KeyboardKeys__WEBPACK_IMPORTED_MODULE_1__[\"default\"].right:\r\n                    if (gameType == 0)\r\n                        gameType = 1;\r\n                    break;\r\n                case _KeyboardKeys__WEBPACK_IMPORTED_MODULE_1__[\"default\"].down:\r\n                    musicType++;\r\n                    if (musicType == 4)\r\n                        musicType = 3;\r\n                    if (musicType != 3) {\r\n                        // console.log(musicType)\r\n                        audio.pause();\r\n                        audio = new Audio('./assets/Music_' + (musicType + 1) + '.ogg');\r\n                        audio.play();\r\n                    }\r\n                    else {\r\n                        audio.pause();\r\n                    }\r\n                    break;\r\n                case _KeyboardKeys__WEBPACK_IMPORTED_MODULE_1__[\"default\"].up:\r\n                    musicType--;\r\n                    if (musicType == -1)\r\n                        musicType = 0;\r\n                    if (musicType != 3) {\r\n                        // console.log(musicType)\r\n                        audio.pause();\r\n                        audio = new Audio('./assets/Music_' + (musicType + 1) + '.ogg');\r\n                        audio.play();\r\n                    }\r\n                    else {\r\n                        audio.pause();\r\n                    }\r\n                    break;\r\n                case _KeyboardKeys__WEBPACK_IMPORTED_MODULE_1__[\"default\"].enter:\r\n                    if (gameType == 0) {\r\n                        img.remove();\r\n                        _this.goType_A();\r\n                        clearInterval(changeArrows);\r\n                        document.body.addEventListener(\"keydown\", listener, false);\r\n                        if (document.getElementById(\"leftArrowMT\") != undefined) {\r\n                            document.getElementById(\"leftArrowGT\").remove();\r\n                            document.getElementById(\"rightArrowGT\").remove();\r\n                            document.getElementById(\"leftArrowMT\").remove();\r\n                            document.getElementById(\"rightArrowMT\").remove();\r\n                            document.body.removeEventListener(\"keydown\", listener, false);\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        };\r\n        document.body.addEventListener(\"keydown\", listener, false);\r\n    };\r\n    Home.prototype.goType_A = function () {\r\n        var _this = this;\r\n        var img = document.createElement(\"img\");\r\n        img.id = \"settingPage\";\r\n        img.style.width = \"90%\";\r\n        img.style.height = \"auto\";\r\n        img.style.display = \"block\";\r\n        img.style.marginLeft = \"auto\";\r\n        img.style.marginRight = \"auto\";\r\n        img.src = config.assets[\"type-a\"].src;\r\n        document.getElementById(\"gameBoard\").appendChild(img);\r\n        var level = 0;\r\n        var active = true;\r\n        var frameInterval = function () {\r\n            if (active) {\r\n                var frame = document.createElement(\"img\");\r\n                frame.id = \"frame\";\r\n                frame.style.position = \"absolute\";\r\n                frame.style.width = \"3%\";\r\n                var basicLeft = 644;\r\n                var basicTop = 338;\r\n                if (level < 5) {\r\n                    frame.style.left = basicLeft + level * 68 + 'px';\r\n                    frame.style.top = basicTop + 'px';\r\n                }\r\n                else {\r\n                    frame.style.left = basicLeft + (level - 5) * 68 + 'px';\r\n                    frame.style.top = basicTop + 68 + 'px';\r\n                }\r\n                frame.src = config.assets[\"type-a\"].frame;\r\n                document.getElementById(\"gameBoard\").appendChild(frame);\r\n            }\r\n            else {\r\n                document.getElementById(\"frame\").remove();\r\n            }\r\n            active = !active;\r\n        };\r\n        var changeFrame = setInterval(frameInterval, 100);\r\n        // this.goPlay()\r\n        var listener = function (event) {\r\n            switch (event.keyCode) {\r\n                case _KeyboardKeys__WEBPACK_IMPORTED_MODULE_1__[\"default\"].left:\r\n                    level--;\r\n                    if (level == -1)\r\n                        level = 0;\r\n                    break;\r\n                case _KeyboardKeys__WEBPACK_IMPORTED_MODULE_1__[\"default\"].right:\r\n                    level++;\r\n                    if (level == 10)\r\n                        level = 9;\r\n                    break;\r\n                case _KeyboardKeys__WEBPACK_IMPORTED_MODULE_1__[\"default\"].down:\r\n                    if (level < 5)\r\n                        level = level + 5;\r\n                    break;\r\n                case _KeyboardKeys__WEBPACK_IMPORTED_MODULE_1__[\"default\"].up:\r\n                    if (level >= 5)\r\n                        level = level - 5;\r\n                    break;\r\n                case _KeyboardKeys__WEBPACK_IMPORTED_MODULE_1__[\"default\"].enter:\r\n                    img.remove();\r\n                    _this.goPlay(level);\r\n                    clearInterval(changeFrame);\r\n                    document.body.addEventListener(\"keydown\", listener, false);\r\n                    if (document.getElementById(\"frame\") != undefined) {\r\n                        document.getElementById(\"frame\").remove();\r\n                        document.body.removeEventListener(\"keydown\", listener, false);\r\n                    }\r\n                    break;\r\n            }\r\n        };\r\n        document.body.addEventListener(\"keydown\", listener, false);\r\n    };\r\n    Home.prototype.goPlay = function (level) {\r\n        var table = new _CreateTable__WEBPACK_IMPORTED_MODULE_0__[\"default\"](level);\r\n    };\r\n    return Home;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Home);\r\n\n\n//# sourceURL=webpack://tetris/./src/components/Home.ts?");

/***/ }),

/***/ "./src/components/KeyboardKeys.ts":
/*!****************************************!*\
  !*** ./src/components/KeyboardKeys.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    \"left\": 65,\r\n    \"up\": 87,\r\n    \"right\": 68,\r\n    \"down\": 83,\r\n    \"leftArrow\": 37,\r\n    \"rightArrow\": 39,\r\n    \"enter\": 13\r\n});\r\n\n\n//# sourceURL=webpack://tetris/./src/components/KeyboardKeys.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_Home__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/Home */ \"./src/components/Home.ts\");\n\r\n/**\r\n * wywołuje klasę Game w której całą gra się toczy. Argumentem jest wielkość mapy\r\n */\r\n// let games = new CreateTable();\r\nvar game = new _components_Home__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n\n\n//# sourceURL=webpack://tetris/./src/index.ts?");

/***/ }),

/***/ "./src/components/config.json":
/*!************************************!*\
  !*** ./src/components/config.json ***!
  \************************************/
/***/ ((module) => {

eval("module.exports = JSON.parse('{\"table\":{\"rows\":10,\"columns\":20,\"blockWidth\":29},\"assets\":{\"credits\":{\"src\":\"./assets/credits.png\"},\"home\":{\"src\":\"./assets/home.png\"},\"settings\":{\"src\":\"./assets/settings.png\",\"leftArrow\":\"./assets/leftArrow.png\",\"rightArrow\":\"./assets/rightArrow.png\"},\"board\":{\"src\":\"./assets/board.png\"},\"type-a\":{\"src\":\"./assets/a-type.png\",\"frame\":\"./assets/levelActive.png\"}},\"game\":{\"pieces\":[[[0,0,0],[1,1,1],[0,1,0]],[[0,0,0],[1,1,1],[0,0,1]],[[0,0,0],[1,1,0],[0,1,1]],[[0,0,0],[0,1,1],[0,1,1]],[[0,0,0],[0,1,1],[1,1,0]],[[0,0,0],[1,1,1],[1,0,0]],[[0,0,0,0],[0,0,0,0],[1,1,1,1],[0,0,0,0]]]}}');\n\n//# sourceURL=webpack://tetris/./src/components/config.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;